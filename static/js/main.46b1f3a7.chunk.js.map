{"version":3,"sources":["components/navbar.js","components/home.js","components/data/objectos_lista.js","components/objectos.js","components/firebase.js","components/objecto.js","components/object_detail.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","href","data-target","id","exact","to","Home","title","ObjectosList","name","img_src","url","description","Objetos","objectos","map","item","src","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Objecto","image","Object_detail","objectURL","path","render","Fragment","firestore","collection","add","get","then","snapshot","docs","forEach","doc","console","log","data","App","sidenav","document","querySelector","M","Sidenav","init","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.46b1f3a7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n//import logo from './logo.svg';\r\n\r\n//import './App.css';\r\nimport 'materialize-css';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from  'materialize-css/dist/js/materialize.min.js';\r\nimport { Link} from 'react-router-dom';\r\n\r\nconst Navbar =(props) => (\r\n    <nav className=\"brown darken-3\">\r\n    <div className=\"container\">\r\n    <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger show-on-large\"><i className=\"material-icons\">menu</i></a>\r\n   \r\n       <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li><Link exact to=\"/\">Home</Link></li>\r\n          <li><Link to=\"/objectos\">Objectos</Link></li>\r\n       </ul>\r\n    </div>\r\n  </nav>\r\n\r\n\r\n\r\n);\r\n\r\n\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nimport 'materialize-css';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\n\r\nconst Home = (props) => (\r\n\r\n\r\n    <div className=\"container\">\r\n        <h2>{props.title}</h2>\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Home;","export const ObjectosList = [\r\n\r\n    {\r\n        id: 1 ,\r\n        name: \"Objecto 1\",\r\n        img_src: \"https://raw.githubusercontent.com/Joaosilgo/react-app/gh-pages/logo512.png\",\r\n        url: \"https://joaosilgo.github.io/react-app/\",\r\n        description: \"https://joaosilgo.github.io/react-app/\"\r\n    },\r\n    {\r\n        id: 2 ,\r\n        name: \"Objecto 2\",\r\n        img_src: \"https://raw.githubusercontent.com/Joaosilgo/react-app/gh-pages/logo512.png\",\r\n        url: \"https://joaosilgo.github.io/react-app/\",\r\n        description: \"https://joaosilgo.github.io/react-app/\"\r\n    },\r\n    {\r\n        id: 3 ,\r\n        name: \"Objecto 3\",\r\n        img_src: \"https://raw.githubusercontent.com/Joaosilgo/react-app/gh-pages/logo512.png\",\r\n        url: \"https://joaosilgo.github.io/react-app/\",\r\n        description: \"https://joaosilgo.github.io/react-app/\"\r\n    }\r\n\r\n\r\n\r\n];","import React, { Component } from 'react';\r\n\r\nimport 'materialize-css';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { ObjectosList } from './data/objectos_lista';\r\n\r\nconst Objetos = (props) => {\r\n\r\n  let objectos = ObjectosList.map((item) => {\r\n    return (\r\n\r\n\r\n      //  <h1>{item.img_src}</h1>\r\n\r\n      <div className=\"col s12 m4\">\r\n        <div className=\"card Medium\">\r\n          <div className=\"card-image waves-effect waves-block waves-light\">\r\n            <img className=\"activator\" src={item.img_src} />\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title activator grey-text text-darken-4\">{item.name}<i className=\"material-icons right\">more_vert</i></span>\r\n            <p><a href={item.url}>Go to Object</a></p>\r\n          </div>\r\n          <div className=\"card-reveal\">\r\n            <span className=\"card-title grey-text text-darken-4\">{item.name}<i className=\"material-icons right\">close</i></span>\r\n            <p>{item.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <div className=\"container center\">\r\n        <div className=\"row\">\r\n          {objectos}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Objetos;","import firebase from 'firebase/app';\r\n\r\nimport { app } from \"firebase\";\r\n\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCshnGLMovwVnR12nce2wLOrYAbekJi-Ek\",\r\n    authDomain: \"project1-d6d98.firebaseapp.com\",\r\n    databaseURL: \"https://project1-d6d98.firebaseio.com\",\r\n    projectId: \"project1-d6d98\",\r\n    storageBucket: \"project1-d6d98.appspot.com\",\r\n    messagingSenderId: \"892725629518\",\r\n    appId: \"1:892725629518:web:ae0a44178167247826291f\",\r\n    measurementId: \"G-PPG6SF8K56\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React, { Component } from 'react'\r\n\r\n\r\n\r\n\r\nconst Objecto = (props) => {\r\n    \r\n  \r\n\r\n     return (\r\n    \r\n        <div className=\"container\">\r\n            <img src={props.image}/> \r\n            <p className=\"flow-text\"> ID: {props.id}  </p>\r\n            <p className=\"flow-text\"> Name: {props.name}  </p>\r\n            <p className=\"flow-text\"> Description: {props.description}  </p>\r\n            \r\n        </div>\r\n     )\r\n \r\n\r\n}\r\n\r\n\r\n\r\nexport default Objecto;\r\n","import React, { Component } from 'react'\r\nimport  {ObjectosList}  from './data/objectos_lista';\r\nimport { Route } from 'react-router-dom';\r\nimport Objecto from './objecto';\r\nimport Objectos from './objectos';\r\n\r\n\r\nconst Object_detail = (props) => {\r\n    \r\n  \r\n        let objectURL=ObjectosList.map((item) => {\r\n        return (\r\n          <Route path={`/objectos/${item.id}`} render={()=> <Objecto image={item.img_src} id={item.id} name={item.name} description={item.description}/>}/>\r\n         \r\n        )\r\n })\r\n  \r\n return (\r\n\r\n    <React.Fragment>\r\n\r\n <Route exact path=\"/objectos\" render={()=> <Objectos   />}/>\r\n\r\n{objectURL}\r\n    </React.Fragment>\r\n  )\r\n   \r\n};\r\n\r\n\r\n\r\nexport default Object_detail;\r\n\r\n","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport Navbar from './components/navbar';\nimport Home from './components/home';\nimport Objectos from './components/objectos';\nimport { BrowserRouter , Route} from 'react-router-dom';\n\nimport firebase from './components/firebase';\n\n\n//import './App.css';\nimport 'materialize-css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { Link} from 'react-router-dom';\nimport Object_detail from './components/object_detail';\nimport Objetos from './components/objectos';\n\n\nfirebase.firestore().collection('time').add(\n  {\n    title:'Joao Gomes'\n  }\n)\n\n\nfirebase.firestore().collection('utilizadores').get().then((snapshot) =>\n\nsnapshot.docs.forEach( doc => {\n  console.log(doc.data())\n})\n\n)\n\n\nclass App extends Component {\n\n  \n\n\n  //function App() {\n  componentDidMount() {\n    let sidenav = document.querySelector('#slide-out');\n    M.Sidenav.init(sidenav, {});\n  }\n\n\n\n\n\n  render() {\n\n\n    return (\n      /*<div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n      \n         <Home title=\"Home\" /> \n      */\n\n\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar title=\"React App\" />\n          <Route  exact path={\"/\"} render={() => <Home title=\"Home\" />} />\n          <Route  path=\"/objectos\" render={() => <Object_detail title=\"Objecto\" />} />\n          \n          <ul id=\"slide-out\" className=\"sidenav\">\n            <li><Link exact to=\"/\">Home</Link></li>\n            <li><Link to=\"/objectos\">Objectos</Link></li>\n            <li><Link to=\"/\">About</Link></li>\n          </ul>\n          \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}